name: Ping Supabase to Prevent Pausing

on:
  schedule:
    - cron: "0 8 * * 1,4" # Runs at 8:00 AM UTC (12:00 AM PST, 1:00 AM PDT) on Mondays and Tuesdays
  workflow_dispatch: # Allows manual triggering from GitHub UI

jobs:
  ping:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Supabase CLI
        run: |
          echo "Step: Installing jq"
          # Ensure jq is installed
          sudo apt-get install -y jq

          echo "Step: Fetching latest Supabase CLI version"
          # Fetch the latest release tag from GitHub API
          VERSION=$(curl -s https://api.github.com/repos/supabase/cli/releases/latest | jq -r .tag_name)

          echo "Step: Extracted version: ${VERSION}"

          # Check if the version was correctly extracted
          if [ -z "${VERSION}" ]; then
            echo "Error: Could not fetch the version"
            exit 1
          fi

          echo "Step: Installing Supabase CLI version: ${VERSION}"

          # Check if the tarball is in .tar.gz or .tar.xz format
          DOWNLOAD_URL="https://github.com/supabase/cli/releases/download/${VERSION}/supabase_${VERSION#v}_linux_amd64.tar.gz"
          RESPONSE=$(curl -I -s $DOWNLOAD_URL | head -n 1)

          if echo "$RESPONSE" | grep -q "200 OK"; then
            echo "Downloading .tar.gz version of Supabase CLI"
            curl -sL "$DOWNLOAD_URL" | tar xz
          else
            DOWNLOAD_URL="https://github.com/supabase/cli/releases/download/${VERSION}/supabase_${VERSION#v}_linux_amd64.tar.xz"
            echo "Downloading .tar.xz version of Supabase CLI"
            curl -sL "$DOWNLOAD_URL" | tar xJ
          fi

          # Move the extracted CLI to the correct location
          sudo mv supabase /usr/local/bin/supabase

          echo "Step: Supabase CLI installed successfully"

      - name: Run SQL Query to Prevent Pausing
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
        run: |
          echo "Step: Linking Supabase project"
          # Link the Supabase project using the access token
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}

          echo "Step: Running SQL query to keep project active"
          # Run a SQL query to ensure activity is detected by Supabase
          supabase db query "SELECT NOW();"

          echo "Step: SQL query executed successfully"

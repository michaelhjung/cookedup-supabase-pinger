name: Ping Supabase to Prevent Pausing

on:
  schedule:
    - cron: "0 8 * * 1,4" # Runs at 8:00 AM UTC (12:00 AM PST, 1:00 AM PDT) on Mondays and Tuesdays
  workflow_dispatch: # Allows manual triggering from GitHub UI

jobs:
  ping:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Supabase CLI
        run: |
          echo "Step: Installing Supabase CLI"

          # Fetch the latest release details from the GitHub API
          VERSION=$(curl -s https://api.github.com/repos/supabase/cli/releases/latest | jq -r .tag_name)

          echo "Step: Extracted version: ${VERSION}"

          # Get the appropriate asset (looking for linux_amd64.tar.gz or linux_amd64.tar.xz)
          ASSET_URL=$(curl -s https://api.github.com/repos/supabase/cli/releases/tags/${VERSION} | jq -r '.assets[] | select(.name | test("linux_amd64.*\\.tar\\.gz$")) | .browser_download_url')

          if [ -z "$ASSET_URL" ]; then
            # If no .tar.gz found, try .tar.xz
            ASSET_URL=$(curl -s https://api.github.com/repos/supabase/cli/releases/tags/${VERSION} | jq -r '.assets[] | select(.name | test("linux_amd64.*\\.tar\\.xz$")) | .browser_download_url')
          fi

          echo "Step: Downloading from ${ASSET_URL}"

          # Download and extract the correct asset
          curl -sL $ASSET_URL | tar -xzf -

          # Move the CLI to a location in the PATH
          sudo mv supabase /usr/local/bin/

          # Verify installation
          supabase --version

      - name: Run SQL Query to Prevent Pausing
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
        run: |
          # Link the Supabase project using the access token
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}

          # Run a SQL query to ensure activity is detected by Supabase
          supabase db query "SELECT NOW();"
